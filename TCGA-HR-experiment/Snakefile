from os.path import join

subworkflow dataworkflow:
    workdir:
        "../TCGA-data"

include: '../Snakefile'
include: '../SomaticSignatures/Snakefile'
include: '../signature-visualization/Snakefile'

OUTPUT_DIR = 'processed'
RAW_DIR = 'raw'

wildcard_constraints:
    cancer_type="BRCA"

# Files from the TCGA-data workflow
RAW_MUTATION_COUNT_MATRIX_FILE=join(RAW_DIR, "TCGA-{cancer_type}_mutation_count.tsv")
POLE_EXO_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_POLE-exo_feature.tsv")
HR_FEATURE_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_HRd_feature.tsv")
LST_FEATURE_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_LST_feature.tsv")
HR_BIALLELIC_INACTIVATION_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_HR-biallelic-inactivation_Riaz2017.tsv")
DDR_SILENCING_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_Silencing_Knijnenburg2018.tsv")
DDR_MUTATED_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_Mutated_Knijnenburg2018.tsv")
DDR_DELETED_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_Deleted_Knijnenburg2018.tsv")
CLINICAL_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_clinical.tsv")

# Input files
ALL_MUTATION_COUNT_MATRIX_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_all_mutation_count.tsv")
ALL_FEATURE_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_all_clinical_features.tsv")

MC_FILE=join(OUTPUT_DIR, "mutation-count-all_TCGA-{cancer_type}.tsv")
FEATURE_FILE=join(OUTPUT_DIR, "features-all_TCGA-{cancer_type}.tsv")

VALIDATE_FEATURE_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_features_validate.tsv")
VALIDATE_MC_FILE=join(OUTPUT_DIR, "TCGA-{cancer_type}_mutation_count_validate.tsv")

TEST_FEATURE_FILE=join(OUTPUT_DIR, "features-test_TCGA-{cancer_type}_{fold}.tsv")
TEST_MC_FILE=join(OUTPUT_DIR, "mutation-count-test_TCGA-{cancer_type}_{fold}.tsv")

TRAIN_FEATURE_FILE=join(OUTPUT_DIR, "features-train_TCGA-{cancer_type}_{fold}.tsv")
TRAIN_MC_FILE=join(OUTPUT_DIR, "mutation-count-train_TCGA-{cancer_type}_{fold}.tsv")

# OUTPUT FILES
STM_HELDOUT_LIKELIHOOD_FILE=join(OUTPUT_DIR, 'stm-heldout-likelihood_{covariates}_{K}_TCGA-{cancer_type}_{fold}.tsv')
STM_COMBINED_HELDOUT_LIKELIHOOD_FILE=join(OUTPUT_DIR, 'stm-combined-heldout_{covariates}_TCGA-{cancer_type}.tsv')
STM_ALL_NORMALIZED_EXPOSURES_FILE=join(OUTPUT_DIR, 'stm-all-normalized-exposures_{covariates}_{K}_TCGA-{cancer_type}.tsv')
LIKELIHOOD_PLOT=join(OUTPUT_DIR,'likelihood-plot_{covariates1}_{covariates2}_TCGA-{cancer_type}.pdf')
STM_HELDOUT_LIKELIHOOD_RATIO_FILE=join(OUTPUT_DIR, 'stm-heldout-ratio_{covariate_of_interest}_{covariates}_{K}_TCGA-{cancer_type}_{fold}.tsv')
LST_PLOT=join(OUTPUT_DIR, "lst-scatterplot_{covariate_of_interest}_{covariates}_{K}_TCGA-{cancer_type}.pdf")
STM_BOXPLOT=join(OUTPUT_DIR, "stm-boxplot_{covariate_of_interest}_{covariates}_{K}_TCGA-{cancer_type}.pdf")
TOPIC_EXPOSURE_PLOT=join(OUTPUT_DIR, "stm-exposure-plot_{covariates}_{K}_TCGA-{cancer_type}_{topic}.png")
SS_NORMALIZED_EXPOSURES_FILE=join(OUTPUT_DIR, 'SS-{partition}-normalized-exposures_NULL_{K}_TCGA-{cancer_type}_{fold}.tsv')
STM_EXOME_SIGNATURES_FILE=join(OUTPUT_DIR, 'stm-exome-signatures_{covariates}_{K}_TCGA-{cancer_type}.tsv')

# Likelihood Plot Files
ALL_LIKELIHOOD_PLOT=join(OUTPUT_DIR,'likelihood-plot_all-biallelic-inactivations_TCGA-BRCA.pdf')
LST_HR_BI_COV_LIKELIHOOD_PLOT=join(OUTPUT_DIR,'likelihood-plot_LST-HR-biallelic-covariate_TCGA-BRCA.pdf')
NULL_HR_BI_COV_LIKELIHOOD_PLOT=join(OUTPUT_DIR,'likelihood-plot_NULL-HR-biallelic-covariate_TCGA-BRCA.pdf')
HR_BI_COV_LIKELIHOOD_PLOT=join(OUTPUT_DIR,'likelihood-plot_HR-biallelic-covariate_TCGA-BRCA.pdf')
LST_COMBINED_HR_ALL_HR_LIKELIHOOD_PLOT=join(OUTPUT_DIR,'likelihood-plot_LST-combined-HR-all-HR_TCGA-BRCA.pdf')

# Model Files
SIGMA_FILE=join(OUTPUT_DIR, 'stm-sigma_{covariates}_{K}_TCGA-{cancer_type}.tsv')
GAMMA_FILE=join(OUTPUT_DIR, 'stm-gamma_{covariates}_{K}_TCGA-{cancer_type}.tsv')
COV_SIG_FILE=join(OUTPUT_DIR, 'stm-covariate-significance_{covariate_of_interest}_{covariates}_{K}_TCGA-{cancer_type}.tsv')
seed="123456"

N_FOLDS=5
FOLDS=range(0, N_FOLDS)

MIN_K=2
MAX_K=10
K_RANGE=range(MIN_K, MAX_K+1)
K=5

rule figure_2:
    input:
        NULL_HR_BI_COV_LIKELIHOOD_PLOT,
        SIG_COSINE_PLOT.format(covariates="BRCA1BRCA2RAD51C", method="stm", K=K, project="TCGA-BRCA"),
        STM_BOXPLOT.format(covariates="BRCA1BRCA2RAD51C", covariate_of_interest="BRCA1BRCA2RAD51C", cancer_type="BRCA", K=K),
        LST_PLOT.format(covariates="BRCA1BRCA2RAD51C", covariate_of_interest="BRCA1BRCA2RAD51C", cancer_type="BRCA", K=K)

rule supplemental_figures:
    input:
        LST_COMBINED_HR_ALL_HR_LIKELIHOOD_PLOT,
        SIG_PLOT.format(covariates="BRCA1BRCA2RAD51C", method="stm", project="TCGA-BRCA", K=K)

rule COSMIC_cosine_similarity_plot:
    input:
        SIG_COSINE_PLOT.format(covariates="BRCA1BRCA2RAD51C", method="stm", K=K, project="TCGA-BRCA"),

rule calculate_covariate_significance:
    input:
        COV_SIG_FILE.format(covariates="BRCA1BRCA2RAD51C", covariate_of_interest="BRCA1BRCA2RAD51C", cancer_type="BRCA", K=K)

rule covariate_significance:
    input:
        SIGMA_FILE,
        GAMMA_FILE,
        FEATURE_FILE
    params:
        seed=seed
    output:
        COV_SIG_FILE
    script:
        "../src/simulate_logistic_normal.py"

rule plot_HR_biallelic_likelihoods:
    input:
        expand(STM_COMBINED_HELDOUT_LIKELIHOOD_FILE, cancer_type="BRCA",
               covariates=["BRCA1BRCA2RAD51C"],
               K=K)
    output:
        HR_BI_COV_LIKELIHOOD_PLOT
    script:
        "../src/plot_likelihoods.py"

rule plot_LST_all_HR_combined_HR_likelihoods:
    input:
        expand(STM_COMBINED_HELDOUT_LIKELIHOOD_FILE, cancer_type="BRCA",
               covariates=["LST", "BRCA1BRCA2RAD51C", "HRINACTIVATIONS"],
               K=K)
    output:
        LST_COMBINED_HR_ALL_HR_LIKELIHOOD_PLOT
    script:
        "../src/plot_likelihoods.py"

rule plot_NULL_HR_biallelic_likelihoods:
    input:
        expand(STM_COMBINED_HELDOUT_LIKELIHOOD_FILE, cancer_type="BRCA",
               covariates=["NULL", "BRCA1BRCA2RAD51C"],
               K=K)
    output:
        NULL_HR_BI_COV_LIKELIHOOD_PLOT
    script:
        "../src/plot_likelihoods.py"

rule plot_LST_HR_biallelic_likelihoods:
    input:
        expand(STM_COMBINED_HELDOUT_LIKELIHOOD_FILE, cancer_type="BRCA",
               covariates=["LST", "BRCA1BRCA2RAD51C"],
               K=K)
    output:
        LST_HR_BI_COV_LIKELIHOOD_PLOT
    script:
        "../src/plot_likelihoods.py"

rule plot_all_HR_likelihoods:
    input:
        expand(STM_COMBINED_HELDOUT_LIKELIHOOD_FILE, cancer_type="BRCA",
               covariates=["ATM", "BRCA1", "BRCA2", "CHEK2", "FANCM", "FANCF", "LST", "RAD51C"],
               K=K)
    output:
        ALL_LIKELIHOOD_PLOT
    script:
        "../src/plot_likelihoods.py"

rule plot_LST_heldout_ratio:
    input:
        LST_PLOT.format(covariate_of_interest="BRCA1BRCA2RAD51C", covariates="BRCA1BRCA2RAD51C", K=K, cancer_type="BRCA")

rule plot_HR_heldout_boxplot:
    input:
        STM_BOXPLOT.format(K=K,covariate_of_interest="BRCA1BRCA2RAD51C", covariates="BRCA1BRCA2RAD51C", cancer_type="BRCA")

rule plot_topic_exposures:
    input:
        STM_ALL_NORMALIZED_EXPOSURES_FILE,
        FEATURE_FILE
    output:
        TOPIC_EXPOSURE_PLOT
    script:
        "src/plot_exposures.py"

rule plot_heldout_ratio:
    input:
        expand(STM_HELDOUT_LIKELIHOOD_RATIO_FILE, covariates="{covariates}", covariate_of_interest="{covariate_of_interest}", fold=FOLDS, K="{K}", cancer_type="{cancer_type}")
    output:
        STM_BOXPLOT
    script:
        "src/plot_heldout_ratio.py"

rule plot_LST_by_heldout_ratio:
    input:
        expand(STM_HELDOUT_LIKELIHOOD_RATIO_FILE, covariates="{covariates}", covariate_of_interest="{covariate_of_interest}", fold=FOLDS, K="{K}", cancer_type="{cancer_type}")
    output:
        LST_PLOT
    script:
        "src/plot_LST.py"

rule combine_stm_heldout_likelihood_files:
    input:
        expand(STM_HELDOUT_LIKELIHOOD_FILE, K = K_RANGE,
               cancer_type="{cancer_type}", fold=FOLDS, covariates="{covariates}")
    output:
        STM_COMBINED_HELDOUT_LIKELIHOOD_FILE
    script:
        "../src/combine_heldout_likelihood_files.py"


rule split_test_training_data:
    input:
        MC_FILE,
        FEATURE_FILE
    params:
        seed=seed,
        n_folds=N_FOLDS,
        feature="HR Status"
    output:
        TEST_MC_FILE,
        TRAIN_MC_FILE,
        TEST_FEATURE_FILE,
        TRAIN_FEATURE_FILE
    script:
        "../src/stratified_split_test_training_data.py"


rule split_validate_training:
    input:
        ALL_MUTATION_COUNT_MATRIX_FILE,
        ALL_FEATURE_FILE
    params:
        seed=seed,
        feature="HR Status"
    output:
        VALIDATE_MC_FILE,
        MC_FILE,
        VALIDATE_FEATURE_FILE,
        FEATURE_FILE
    script:
        "../src/stratified_split_training_validate_data.py"


rule clean_feature_mutation_count:
    params:
        seed=seed
    input:
        dataworkflow(RAW_MUTATION_COUNT_MATRIX_FILE),
        dataworkflow(HR_BIALLELIC_INACTIVATION_FILE),
        dataworkflow(DDR_SILENCING_FILE),
        dataworkflow(LST_FEATURE_FILE),
        dataworkflow(HR_FEATURE_FILE),
        dataworkflow(CLINICAL_FILE),
    output:
        ALL_MUTATION_COUNT_MATRIX_FILE,
        ALL_FEATURE_FILE
    script:
        "src/clean_feature_mutation_count.py"
