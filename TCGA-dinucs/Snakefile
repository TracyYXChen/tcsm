from os.path import join, sep
from os import listdir
import pandas as pd

# Config
configfile: 'config.yml'
PROJECTS = config['FIREHOSE-projects']
BY_CATEGORY = config['by-category']

# Files
RAW_DIR='raw'
PROCESSED_DIR='processed'

FIREHOSE_RAW="gdac.broadinstitute.org_{project}.Mutation_Packager_Oncotated_Calls.Level_3.2016012800.0.0"
FIREHOSE_URL="http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/{project}/20160128/" + FIREHOSE_RAW + ".tar.gz"

FIREHOSE_DNP_FILE = FIREHOSE_RAW + ".patient_DNP_map.tsv"


# Helper functions for categories
def reverse_complement(seq):
    trans = str.maketrans('ATGC', 'TACG')
    return seq.translate(trans)[::-1]

def DBS_78_category(row):
    ref = row["Reference_Allele"]
    variant = row["Tumor_Seq_Allele2"]
    if ref in ['AA', 'AG', 'CA', 'GA', 'GG', 'GT']:
        ref = reverse_complement(ref)
        variant = reverse_complement(variant)
    cat_name = ('%s>%s' % (ref, variant))
    return cat_name

# Rules
rule all:
    input:
        expand(join(PROCESSED_DIR, FIREHOSE_DNP_FILE), project=PROJECTS)

rule patient_DNP_map:
    input:
        join(RAW_DIR, FIREHOSE_RAW)
    output:
        join(PROCESSED_DIR, FIREHOSE_DNP_FILE)
    run:
        # Get list of maf files in directory
        project_files = [f for f in listdir(str(input)) if f.endswith(".maf.txt")]
        # Select relevant columns
        cols = ["Tumor_Sample_Barcode", "Strand", "Variant_Type", "Reference_Allele", "Tumor_Seq_Allele2"]
        # Read in all maf files in list, concatenate into the same data frame
        df = pd.concat((pd.read_csv(join(str(input), f), sep="\t", comment="#", usecols=cols) for f in project_files))
        # Restrict to DNP mutations
        df = df.loc[df["Variant_Type"] == "DNP"]
        print(df)
        # Group by sample and category or by sample and mutation
        if BY_CATEGORY:
            df["Category"] = df.apply(DBS_78_category, axis='columns')
            df = df.groupby(["Tumor_Sample_Barcode", "Category"]).size().reset_index(name='count')
        else:
            df = df.groupby(["Tumor_Sample_Barcode", "Reference_Allele", "Tumor_Seq_Allele2"]).size().reset_index(name='count')
            # Add mutation column for convenience
            df["Mutation"] = df.apply(lambda row: "%s>%s" % (row["Reference_Allele"], row["Tumor_Seq_Allele2"]), axis='columns')
        df.to_csv(str(output), sep="\t", index=False)

rule tar:
    input:
        join(RAW_DIR, "{filename}.0.tar")
    output:
        directory(join(RAW_DIR, "{filename}.0"))
    shell:
        "tar -xvf {output}.tar -C {RAW_DIR}"

rule gunzip:
    input:
        join(RAW_DIR, "{filename}.0.tar.gz")
    output:
        join(RAW_DIR, "{filename}.0.tar")
    shell:
        "gunzip {input}"

rule download:
    params:
        url=FIREHOSE_URL
    output:
        join(RAW_DIR, FIREHOSE_RAW + ".tar.gz")
    shell:
        "wget -O {output} {params.url}"
